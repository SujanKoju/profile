1. What is the difference between the following 2 statements?
setTimeout(booyah, 2000);
setTimeout(booyah(), 2000);

a.setTimeout(booyah, 2000);  =   the function booyah will be executed after 2000ms as expected
b.setTimeout(booyah(), 2000); = the function booyah will be executed instantly ,and the return type of booyah will be executed after 2000ms
instead of being executed after 2000ms


------------------------------------------------------------------------------------------------------------------------

2. What do the following 2 alerts display (answer without running the code)?
var myfunc = function(a, x) {
 return a * x;
};
var x = myfunc(2, 3);
var y = myfunc;
alert(x);
alert(y(2,3));

output : alert(x);  Alert display will appear with value 6
output : alert(y(2,3));  Alert display will appear with value 6

------------------------------------------------------------------------------------------------------------------------

3. Write functions booyah1 and booyah2 so that in both cases below, an alert box comes up after 2 seconds that
says “BOOYAH!”
setTimeout(booyah1, 2000);
setTimeout(booyah2(), 2000); a

booyah1(){
alert("BOOYAH");
}

booyah2(){
setTimeout(booyah1, 2000);
}

------------------------------------------------------------------------------------------------------------------------

4. What is "Unobtrusive Javascript"? What is the practical application of Unobtrusive Javascript (and the reasons
for using it)?

Unobtrusive Javascript is the best practise of attaching javascript to the front-end of the website.
It focuses on separation of concern .
i.e Html file --> Content
    Css file --> Presentation
    JS file --> Behaviour

i.e <input type="button" id="btn" onclick="alert('Test')" />
This is not obstrusive JS because behaviour and presentation are mixed .
The onclick shouldn't be there in html and should be part of javascript itself not html.

With above example, you can go unobstrusive like this:
<input type="button" id="btn" />

Js Code:
var el = document.getElementById('btn');
el.onclick = function(){
  alert('Test');
};

Advantage: it separates your concerns, keeps your code clean,
 and allows you to work on the JavaScript without touching either HTML or CSS.
